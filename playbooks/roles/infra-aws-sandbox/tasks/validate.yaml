---
- debug:
    msg: "Validating {{ account_name }}"

- name: Get sandbox
  vars:
    _data:
      name:
        S: "{{ account_name }}"
  command: >-
    {{ aws_cli }} --profile {{ dynamodb_profile }} --region {{ dynamodb_region }}
    dynamodb get-item
    --table-name {{ dynamodb_table }}
    --key '{{ _data | to_json }}'
  register: r_get
  changed_when: false

- name: Set fact of dynamodb scan
  set_fact:
    query1: "{{ r_get.stdout | from_json }}"

- name: Save sandbox variables
  set_fact:
    sandbox_name: "{{ query1.Item.name.S }}"
    sandbox_zone: "{{ query1.Item.zone.S }}"
    sandbox_hosted_zone_id: "{{ query1.Item.hosted_zone_id.S }}"
    sandbox_account: "{{ query1.Item.account_id.S }}"
    sandbox_account_id: "{{ query1.Item.account_id.S }}"
    sandbox_aws_access_key_id: "{{ query1.Item.aws_access_key_id.S }}"

- vars:
    vaulted_text: "{{ query1.Item.aws_secret_access_key.S }}"
  include_tasks: unvault.yml

- name: Validate AWS access
  environment:
    AWS_ACCESS_KEY_ID: ""
    AWS_SECRET_ACCESS_KEY: ""
  aws_caller_info:
    aws_access_key: "{{ sandbox_aws_access_key_id }}"
    aws_secret_key: "{{ sandbox_aws_secret_access_key }}"
  register: r_caller_info

- name: Grab facts about the zone
  route53_info:
    aws_access_key: "{{ sandbox_aws_access_key_id }}"
    aws_secret_key: "{{ sandbox_aws_secret_access_key }}"
    query: hosted_zone
    hosted_zone_method: details
    hosted_zone_id: "{{ sandbox_hosted_zone_id }}"
  register: _route53facts
  retries: 5
  delay: 30
  until: _route53facts is succeeded

- name: Validate route53 zone
  vars:
    ns_entries: >-
      {{ lookup('dig', sandbox_zone, 'qtype=NS').split(',')
      | sort
      | map('regex_replace', '\.$', '')
      | list
      }}
    ns_entries_route53: >-
      {{ _route53facts.DelegationSet.NameServers
      | sort
      | map('regex_replace', '\.$', '')
      | list
      }}

  assert:
    that: ns_entries == ns_entries_route53
  retries: 60
  delay: 1

- name: Ensure Red Hat GOLD AMI are accessible from within the sandbox
  ec2_ami_info:
    aws_access_key: "{{ sandbox_aws_access_key_id }}"
    aws_secret_key: "{{ sandbox_aws_secret_access_key }}"
    region: >-
      {{
      ['us-east-1',
      'us-east-2',
      'us-west-1',
      'us-west-2'
      ] | shuffle | first }}
    # Red Hat official
    owner: 309956199498
    filters:
      architecture: x86_64
      name: RHEL-9.0*Access*
      is-public: "false"
  register: r_image
  # Try for 15m
  retries: 150
  delay: 6
  until: r_image is succeeded and r_image.images | length > 0

- assert:
    that: >-
      r_image.images | length > 0
      and
      ('platform_details' not in r_image.images[0]
      or
      r_image.images[0].platform_details == 'Red Hat BYOL Linux'
      )

- when: operation == 'VALIDATE' or operation == 'validate'
  meta: end_play
